#LyX 2.2 created this file. For more info see http://www.lyx.org/
\lyxformat 508
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\begin_preamble
\usepackage{comment}
\usepackage{color}
\usepackage{framed}

\definecolor{shadecolor}{gray}{0.875}

\specialcomment{musterloesung}{\begin{shaded}Lösung/Hinweise: }{\end{shaded}}

% Nur exluden nötig. Include automatisch.
\excludecomment{musterloesung}
\end_preamble
\use_default_options true
\begin_modules
logicalmkup
customHeadersFooters
\end_modules
\maintain_unincluded_children false
\language american
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize 12
\spacing single
\use_hyperref true
\pdf_title "ADS Übungsblatt"
\pdf_author "Markus Gumbel"
\pdf_bookmarks true
\pdf_bookmarksnumbered false
\pdf_bookmarksopen false
\pdf_bookmarksopenlevel 1
\pdf_breaklinks true
\pdf_pdfborder false
\pdf_colorlinks false
\pdf_backref false
\pdf_pdfusetitle true
\papersize a4paper
\use_geometry true
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\branch taschenrechner
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch klassenkopieren
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch baumdarstellung
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch stringliststack
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch inhalt
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch aufwandsabschätzung
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch dyn-datenstruktur
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch listen
\selected 0
\filename_suffix 0
\color #ffffff
\end_branch
\branch bäume
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch gleichheit-unterbäume
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\branch Höhe-von-Bäumen
\selected 1
\filename_suffix 0
\color #ffffff
\end_branch
\index Index
\shortcut idx
\color #008000
\end_index
\leftmargin 3cm
\topmargin 3cm
\rightmargin 2.5cm
\bottommargin 3cm
\headheight 2cm
\headsep 0.8cm
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\quotes_language english
\papercolumns 1
\papersides 1
\paperpagestyle fancy
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
fancyhead{}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[CO,CE]{SCABIO Manual}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[LE,LO]{Version 0.1-SNAPSHOT}
\end_layout

\begin_layout Plain Layout


\backslash
fancyhead[RE,RO]{M.
\backslash
 Gumbel
\backslash

\backslash

\backslash
code{m.gumbel@hs-mannheim}}
\end_layout

\end_inset


\end_layout

\begin_layout Title
SCABIO Manual
\end_layout

\begin_layout Author
Markus Gumbel
\end_layout

\begin_layout Date
July 2012
\end_layout

\begin_layout Abstract
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
scabio
\end_layout

\end_inset

 is a framework written in Scala that contains a collection of algorithms
 and methods for bioinformatics.
 It was originally developed to demonstrate algorithms for a lecture in
 bioinformatics but has grown in the meantime and become a comprehensive
 collection.
 The framework contains so far a generic (2D) extensible dynamic programming
 algorithm, global, semi-local and local pairwise alignment, multiple alignment,
 pattern recognition with the Viterbi-algorithm, RNA 2D structure viewer
 based on Nussinov algorithm, greedy superstring algorithm for sequence
 assembly and much more.
\end_layout

\begin_layout Abstract
A key feature is a generic and extensible dynamic programming (DP) algorithm.
 Many bioinformatics algorithms rely on this method.
 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
scabio
\end_layout

\end_inset

 simply comes with a dynamic programming framework/interface which can be
 (re-)used or extended for many purposes, especially for all kind of bioinformat
ics algorithms.
 Within 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
scabio
\end_layout

\end_inset

, all pairwise alignment algorithms, the Viterbi-algorithm and the Nussinov-algo
rithm are based on these DP classes.
\end_layout

\begin_layout Abstract
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
scabio
\end_layout

\end_inset

 requires a Java virtual machine (Java 5 or above) and works with Scala
 2.8 or above.
 It uses Maven 2 and GIT for development.
\end_layout

\begin_layout Abstract
\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\begin_inset Newpage newpage
\end_inset


\end_layout

\begin_layout Section
Scope
\end_layout

\begin_layout Standard
This manual refers to version 0.1-SNAPSHOT which is a very early alpha version.
 Many things are still under construction and may change in the future.
\end_layout

\begin_layout Standard
The manual is for developers in the bioinformatics domain who want to learn
 more about 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

 or who want to implement their own algorithms.
\end_layout

\begin_layout Section
Introduction
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

 library/framework contains algorithms for bioinformatics written in Scala
 
\begin_inset CommandInset citation
LatexCommand cite
key "scala"

\end_inset

 hosted at 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/markusgumbel/scalabioalg"

\end_inset

 and licensed under the Apache License Version 2.0.
 Highlights so far are
\end_layout

\begin_layout Itemize
generic (2D) dynamic programing algorithm (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Dynamic-programming"

\end_inset

)
\end_layout

\begin_layout Itemize
Global, semi-local and local pairwise alignment (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Pairwise-alignment"

\end_inset

)
\end_layout

\begin_layout Itemize
Multiple alignment (star algorithm, see )
\end_layout

\begin_layout Itemize
Pattern recognition with the Viterbi-algorithm (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:Pattern-recognition"

\end_inset

)
\end_layout

\begin_layout Itemize
RNA 2D struct viewer based on Nussinov algorithm (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:RNA-secondary-structures"

\end_inset

)
\end_layout

\begin_layout Itemize
Greedy superstring algorithm for sequence assembly (see 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:DNA-assembly"

\end_inset

)
\end_layout

\begin_layout Itemize
and much more...
\end_layout

\begin_layout Subsection
Motivation
\end_layout

\begin_layout Standard
Why another library for bioinformatics? Well, because it's fun?! No, seriously:
 This project was incubated for ready-to-go examples for a lecture in bioinforma
tics at the Mannheim University of Applied Sciences (see 
\begin_inset CommandInset href
LatexCommand href
target "http://www.mi.hs-mannheim.de/gumbel/en/vorlesungen/bioinformatik-bim"

\end_inset

).
 Many of the algorithms are adapted from the text book 
\begin_inset Quotes eld
\end_inset


\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
Algorithmic Aspects of Bioinformatics
\end_layout

\end_inset


\begin_inset Quotes erd
\end_inset

 by H.
\begin_inset space ~
\end_inset

J.
\begin_inset space ~
\end_inset

Böckenhauer and D.
\begin_inset space ~
\end_inset

Bongartz 
\begin_inset CommandInset citation
LatexCommand cite
key "boeckenhauer2007"

\end_inset

.
\end_layout

\begin_layout Standard
SCABIO might be useful/helpful because
\end_layout

\begin_layout Enumerate
it is written in 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
Scala
\end_layout

\end_inset

.
 Scala is a state of the art programming language for the Java virtual machine
 that combines object-oriented and functional programming paradigms and
 which 100% compatible to Java.
 
\end_layout

\begin_layout Enumerate
especially the functional programming concepts are interesting for 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
concurrent algorithms
\end_layout

\end_inset

 and we will see how bioinformatics tools can benefit.
 Although not yet shown in SCABIO, modern concurrency-frameworks like Akka
 
\begin_inset CommandInset citation
LatexCommand cite
key "akka"

\end_inset

 are easy to apply as they naturally integrate with Scala.
\end_layout

\begin_layout Enumerate
Scala's 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
implicit def
\end_layout

\end_inset

s might be used to wrap and seamless integrate with other Java-based libraries.
 Clearly, Biojava 
\begin_inset CommandInset citation
LatexCommand cite
key "biojava"

\end_inset

 and bioscala 
\begin_inset CommandInset citation
LatexCommand cite
key "bioscala"

\end_inset

 are the most related projects and their integration should be straight
 forward.
\end_layout

\begin_layout Enumerate
Scala has many features that support the development of domain specific
 languages (DSL).
 Such a DSL could be created e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset

for tools that wrap SCABIO's algorithms.
\end_layout

\begin_layout Enumerate
is offers a full-blown generic 
\begin_inset Flex Strong
status collapsed

\begin_layout Plain Layout
dynamic programming
\end_layout

\end_inset

 (DP) algorithm.
 Many bioinformatics algorithms rely on the dynamic programming method.
 However, often the description of such an bioinformatics algorithm does
 not explicitly describe/elaborate where DP is applied and reused.
 This is a pity as DP is a common design pattern which could and should
 have a clear programming interface that could be used.
 There are even methods where the DP pattern (the recurrent equations, to
 be more precise) can be derived from a algebra (see 
\begin_inset CommandInset citation
LatexCommand cite
key "giegerich2004"

\end_inset

).
 However, 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

 simply comes with a dynamic programming framework which can be (re-)used
 for many purposes, especially for bioinformatics algorithms.
\end_layout

\begin_layout Enumerate
it is free!
\end_layout

\begin_layout Standard
We should not forget to mention the open questions: As SCABIO is a new kid
 on the block, it cannot compete with mature frameworks like Biojava.
 However, as the integration is simple, perhaps both frameworks can supplement
 each other.
\end_layout

\begin_layout Standard
\begin_inset Note Note
status open

\begin_layout Plain Layout
Discussion
\end_layout

\end_inset


\end_layout

\begin_layout Standard
SCABIO consists of the modules core and demo.
 core contains 22 classes and 8 traits and 6 enumerations (test classes
 are not considered).
 We found that Scala enables one to write very compact and non redundant
 code.
 For instance, the entire pairwise alignment is accomplished with 192 lines
 of code (LOC, including comments!) for the Alignment class and 265 LOC
 for the generic DynPro class from which Alignment is derived.
 The overall size is about 2,300 LOC.
\end_layout

\begin_layout Section
Installation
\end_layout

\begin_layout Standard
This sections describes the installation process.
\end_layout

\begin_layout Subsection
Prerequisites
\end_layout

\begin_layout Standard
You need
\end_layout

\begin_layout Itemize
a Java virtual machine (Java 5 or above)
\begin_inset CommandInset citation
LatexCommand cite
key "jvm"

\end_inset

.
\end_layout

\begin_layout Itemize
for development: Maven 2 
\begin_inset CommandInset citation
LatexCommand cite
key "maven2"

\end_inset

 and GIT 
\begin_inset CommandInset citation
LatexCommand cite
key "git"

\end_inset

.
\end_layout

\begin_layout Subsection
for developers who want to use the library
\end_layout

\begin_layout Standard
This section explains how to use the library.
 Unfortunately, downloadable jar files are not yet available.
 Please read section 
\begin_inset CommandInset ref
LatexCommand ref
reference "subsec:for-developers-extend"

\end_inset

and compile your project.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:for-developers-extend"

\end_inset

for developers who want to extend the library
\end_layout

\begin_layout Standard
Check out the project from github 
\begin_inset CommandInset href
LatexCommand href
target "https://github.com/markusgumbel/scalabioalg"

\end_inset

.
 The project uses Maven 2 as the build tool 
\begin_inset CommandInset citation
LatexCommand cite
key "maven2"

\end_inset

.
 Run the Maven goal 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
mvn site
\end_layout

\end_inset

.
 This will generate all the relevant artifacts.
 The scaladoc can be found in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
./target/site/index.html
\end_layout

\end_inset

.
 Refer to chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Design"

\end_inset

 for more details on the architecture and design.
\end_layout

\begin_layout Section
Design
\begin_inset CommandInset label
LatexCommand label
name "sec:Design"

\end_inset


\end_layout

\begin_layout Subsection
Design-Principles
\end_layout

\begin_layout Standard
This section elaborates the design principles behind 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsubsection
Functional
\end_layout

\begin_layout Standard
Although SCABIO is not 100% functional it incorporates many features of
 the functional programming paradigms.
 The best practices recommended for Scala (e.
\begin_inset space ~
\end_inset

g.
\begin_inset space ~
\end_inset

 in 
\begin_inset CommandInset citation
LatexCommand cite
key "odersky-scalabook-2010"

\end_inset

) are applied here.
 For instance, is is discouraged to use variables (literally!) as declared
 by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
var
\end_layout

\end_inset

 keyword – instead only immutable 
\begin_inset Quotes eld
\end_inset

variables
\begin_inset Quotes erd
\end_inset

 declared by the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
val
\end_layout

\end_inset

 keyword are used.
 This will help to make the algorithms ready for concurrence.
\end_layout

\begin_layout Subsubsection
Reusability
\end_layout

\begin_layout Standard
SCABIO aims to shift core functionality to base classes (or traits) in order
 to maximize reusability.
 A good example is the consequent and consistent reuse of the dynamic programmin
g method in many algorithms.
\end_layout

\begin_layout Subsubsection
Compact
\end_layout

\begin_layout Standard
Supported by Scala language design, the 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

's source code is quite compact concise and non redundant.
\begin_inset Note Note
status open

\begin_layout Plain Layout
More to come
\end_layout

\end_inset


\end_layout

\begin_layout Subsection
Modules
\end_layout

\begin_layout Standard
There are the following Maven subprojects
\end_layout

\begin_layout Itemize
directory name 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
core
\end_layout

\end_inset

: fundamental algorithms (project name 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
scabio-core
\end_layout

\end_inset

).
\end_layout

\begin_layout Itemize
directory name 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
demo
\end_layout

\end_inset

 (project name 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
scabio-demo
\end_layout

\end_inset

): Examples that use the algorithms found in 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
scabio-core
\end_layout

\end_inset

.
 See chapter 
\begin_inset CommandInset ref
LatexCommand ref
reference "sec:Examples"

\end_inset

 for examples.
\end_layout

\begin_layout Standard
Further subprojects could be added in the future.
\end_layout

\begin_layout Subsection
Dependencies to other libs
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
scabio-core
\end_layout

\end_inset

-module requires the Apache commons-math library
\begin_inset Foot
status open

\begin_layout Plain Layout
as of now only the class 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
org.apache.commons.math.stat.Frequency
\end_layout

\end_inset

 is needed
\end_layout

\end_inset

.
 The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
scabio-demo
\end_layout

\end_inset

 uses Java Universal Network/Graph Framework library 
\begin_inset CommandInset citation
LatexCommand cite
key "JUNG"

\end_inset

 for visualization.
\end_layout

\begin_layout Section
Packages
\end_layout

\begin_layout Standard
This section describes the packages and their algorithms in more detail.
\end_layout

\begin_layout Subsection
Overview
\end_layout

\begin_layout Standard
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

 consists of the following core Scala packages which are part of the 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
scabio-core
\end_layout

\end_inset

 Maven project.
 The term package just refers to a logical unit of source code and does
 not express any other concepts like components etc.
 The root namespace is right now is 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix
\end_layout

\end_inset

 but may change in the future.
 Figure 
\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Module-overview"

\end_inset

 shows an overview.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename fig/overview.svg
	lyxscale 30
	width 95text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Module-overview"

\end_inset

Module overview
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.bioinf
\end_layout

\end_inset

: Algorithms for bioinformatics
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.hmm
\end_layout

\end_inset

: Hidden markov models
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.string
\end_layout

\end_inset

: Everything which operates on strings, i.
\begin_inset space ~
\end_inset

e.
\begin_inset space ~
\end_inset

sequences.
\begin_inset Separator latexpar
\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.alignment
\end_layout

\end_inset

: Sequence alignments (pairwise and multiple)
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.dotplot
\end_layout

\end_inset

: Dotplots
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.seq
\end_layout

\end_inset

: Methods to assembly sequences
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
.struct
\end_layout

\end_inset

: Algorithms for structure formation (currently only RNA secondary structures)
\end_layout

\end_deeper
\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.dynpro
\end_layout

\end_inset

: Dynamic programming basics
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.layout
\end_layout

\end_inset

: Methods to layout characters on a console
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.ui
\end_layout

\end_inset

: Some panels for a user interface
\end_layout

\begin_layout Itemize
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.util
\end_layout

\end_inset

: No comment ;-)
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Dynamic-programming"

\end_inset

Dynamic programming (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.dynpro
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
Tbd.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Pairwise-alignment"

\end_inset

Pairwise alignment (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.bioinf.string.alignment
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
Tbd.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:DNA-assembly"

\end_inset

DNA assembly (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.bioinf.string.seq
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
Tbd.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:RNA-secondary-structures"

\end_inset

RNA secondary structures (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.bioinf.struct
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
Tbd.
\end_layout

\begin_layout Subsection
\begin_inset CommandInset label
LatexCommand label
name "subsec:Pattern-recognition"

\end_inset

Pattern recognition (
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
*.bioinf.hmm
\end_layout

\end_inset

)
\end_layout

\begin_layout Standard
Tbd.
\end_layout

\begin_layout Section
Examples
\begin_inset CommandInset label
LatexCommand label
name "sec:Examples"

\end_inset


\end_layout

\begin_layout Standard
This sections demonstrates some examples how to use 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

.
\end_layout

\begin_layout Subsection
Source-Code-Snippets
\end_layout

\begin_layout Standard
This section shows several 
\begin_inset Flex Noun
status collapsed

\begin_layout Plain Layout
SCABIO
\end_layout

\end_inset

's classes in action.
\end_layout

\begin_layout Subsubsection
Alignments
\end_layout

\begin_layout Standard
Let us create a global alignment of two DNA sequences.
 The scores are our default: match = 1, mismatch = -1 and an insertion or
 deletion = -2.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "lis:Alignment"

\end_inset

 shows an example.
 The class 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Alignment
\end_layout

\end_inset

 expects the sequences to align and the mode which is here set to global
 (Needleman/Wunsch).
 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
Alignment
\end_layout

\end_inset

 provides the method 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
makeAlignmentString()
\end_layout

\end_inset

 that pretty-prints the alignment (line 8).
 The solution is the sequence of decisions.
 
\end_layout

\begin_layout Standard
\begin_inset listings
lstparams "basicstyle={\ttfamily},breaklines=true,captionpos=t,float,frame=tb,language=Java,numbers=left,numbersep=5pt,numberstyle={\tiny},showlines=true,stepnumber=2,tabsize=2"
inline false
status open

\begin_layout Plain Layout

...
\end_layout

\begin_layout Plain Layout

    val s1 = "ACGT"
\end_layout

\begin_layout Plain Layout

    val s2 = "ACGATC"
\end_layout

\begin_layout Plain Layout

    val dp = new Alignment(s1, s2, AlignmentMode.GLOBAL)
\end_layout

\begin_layout Plain Layout

    val solution = dp.solution
\end_layout

\begin_layout Plain Layout

    println("sim = " + dp.similarity)
\end_layout

\begin_layout Plain Layout

    println()
\end_layout

\begin_layout Plain Layout

    println(dp.makeAlignmentString(solution))
\end_layout

\begin_layout Plain Layout

    println()
\end_layout

\begin_layout Plain Layout

    println(dp.mkMatrixString(solution))
\end_layout

\begin_layout Plain Layout

    println()
\end_layout

\begin_layout Plain Layout

    solution.foreach(e => print(e.decision))
\end_layout

\begin_layout Plain Layout

...
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "lis:Alignment"

\end_inset

Alignment
\end_layout

\end_inset


\end_layout

\end_inset


\end_layout

\begin_layout Standard
Running these lines gives the following console output:
\end_layout

\begin_layout Standard
\begin_inset ERT
status open

\begin_layout Plain Layout


\backslash
begin{verbatim}
\end_layout

\begin_layout Plain Layout

sim = 0.0
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

ACG-T.
\end_layout

\begin_layout Plain Layout

||| | 
\end_layout

\begin_layout Plain Layout

ACGATC
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

   |  0    1    2    3    4     5     6  
\end_layout

\begin_layout Plain Layout

   |  -    A    C    G    A     T     C  
\end_layout

\begin_layout Plain Layout

- -|---- ---- ---- ---- ---- ----- ----- 
\end_layout

\begin_layout Plain Layout

0 -| 0.* -2.
  -4.
  -6.
  -8.
  -10.
  -12.
  
\end_layout

\begin_layout Plain Layout

1 A|-2.
   1.* -1.
  -3.
  -5.
   -7.
   -9.
  
\end_layout

\begin_layout Plain Layout

2 C|-4.
  -1.
   2.*  0.
  -2.
   -4.
   -6.
  
\end_layout

\begin_layout Plain Layout

3 G|-6.
  -3.
   0.
   3.*  1.*  -1.
   -3.
  
\end_layout

\begin_layout Plain Layout

4 T|-8.
  -5.
  -2.
   1.
   2.
    2.*   0.* 
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

NBBBIBI
\end_layout

\begin_layout Plain Layout


\backslash
end{verbatim}
\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Knapsack
\end_layout

\begin_layout Standard
The knapsack problem is a well known problem in computer science which can
 be solved using dynamic programming.
 Listing 
\begin_inset CommandInset ref
LatexCommand ref
reference "list:Knapsack"

\end_inset

 shows the class.
\begin_inset CommandInset include
LatexCommand lstinputlisting
filename "../demo/src/main/scala/net/gumbix/dynpro/demo/KnapsackDynPro.scala"
lstparams "basicstyle={\\ttfamily},breaklines=true,captionpos=t,frame=tb,language=Java,linerange={16-20, 49-1000},numbers=left,numbersep=5pt,numberstyle={\\tiny},showlines=true,stepnumber=2,tabsize=2,caption={Knapsack},label={list:Knapsack}"

\end_inset


\end_layout

\begin_layout Subsection
Applications with GUI
\end_layout

\begin_layout Standard
The 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
demo
\end_layout

\end_inset

-subproject contains some applications with an interactive user interface.
\end_layout

\begin_layout Subsubsection
RNA-Folding
\end_layout

\begin_layout Standard
Run the demo 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.bioinf.struct.RNAStruct2DViewer
\end_layout

\end_inset

 within the module 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
demo
\end_layout

\end_inset

.
 It opens a simple GUI showing a RNA sequence in the text field and a visualized
 folding of this sequence (cf.
\begin_inset space ~
\end_inset


\begin_inset CommandInset ref
LatexCommand ref
reference "fig:Showcase-RNA"

\end_inset

).
 Modify the sequence and press ENTER (or just press ENTER) to (re-)draw
 the RNA structure.
 The Nussinov algorithm is used and the graph is visualized with the JUNG
 library.
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename fig/RNA2DViewer.png
	lyxscale 50
	width 90text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
\begin_inset CommandInset label
LatexCommand label
name "fig:Showcase-RNA"

\end_inset

Showcase for two-dimensional RNA folding.
 See 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.bioinf.struct.RNAStruct2DViewer
\end_layout

\end_inset

 within the module 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
demo
\end_layout

\end_inset

.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Subsubsection
Edit-Distance
\end_layout

\begin_layout Standard
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
net.gumbix.string.alignment.EditDistanceApp
\end_layout

\end_inset

 within the module 
\begin_inset Flex Code
status collapsed

\begin_layout Plain Layout
demo
\end_layout

\end_inset

 is a tool which calculates the edit distance of two strings, which is very
 similar to alignment methods.
 This application is used at the Mannheim University of Applied Sciences
 at the faculty for computer science for a some sort of 
\begin_inset Quotes eld
\end_inset

marketing
\begin_inset Quotes erd
\end_inset

 presentations (open campus etc.).
\end_layout

\begin_layout Standard
\begin_inset Float figure
wide false
sideways false
status open

\begin_layout Plain Layout
\align center
\begin_inset Graphics
	filename fig/EditDistance.png
	lyxscale 50
	width 80text%

\end_inset


\end_layout

\begin_layout Plain Layout
\begin_inset Caption Standard

\begin_layout Plain Layout
A tool that calculates the edit distance of two strings.
 Here you need 12 steps to convert 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
bioinformatics
\end_layout

\end_inset

 into 
\begin_inset Flex Emph
status collapsed

\begin_layout Plain Layout
moleculargenetics
\end_layout

\end_inset

.
 The alignment and the dynamic programming table are also shown.
\end_layout

\end_inset


\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_layout Section*
Contact
\end_layout

\begin_layout Standard
For further questions, please contact Markus Gumbel (
\size normal

\begin_inset CommandInset href
LatexCommand href
name "m.gumbel@hs-mannheim.de"
target "m.gumbel@hs-mannheim.de"
type "mailto:"

\end_inset


\size default
) or post an issue to the 
\begin_inset CommandInset href
LatexCommand href
name "project's issue tracking system"
target "https://github.com/markusgumbel/scalabioalg/issues"

\end_inset

.
 The official project's home page is 
\begin_inset CommandInset href
LatexCommand href
target "http://www.mi.hs-mannheim.de/gumbel/en/forschung/scabio/"

\end_inset

.
\end_layout

\begin_layout Paragraph*
Address
\end_layout

\begin_layout Standard
Markus Gumbel
\begin_inset Newline newline
\end_inset


\end_layout

\begin_layout Address
Mannheim University of Applied Sciences
\begin_inset Newline newline
\end_inset

Department of Computer Science, Institute for Medical Informatics, 
\begin_inset Newline newline
\end_inset

Paul-Wittsack-Straße 10
\begin_inset Newline newline
\end_inset

D-68163 Mannheim
\begin_inset Newline newline
\end_inset

Germany
\begin_inset CommandInset bibtex
LatexCommand bibtex
bibfiles "references"
options "amsplain"

\end_inset


\end_layout

\end_body
\end_document
